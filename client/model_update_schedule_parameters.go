/*
CircleCI API

This describes the resources that make up the CircleCI API v2.

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// UpdateScheduleParameters The parameters for an update schedule request
type UpdateScheduleParameters struct {
	// Description of the schedule.
	Description *string `json:"description,omitempty"`
	// Name of the schedule.
	Name      *string                      `json:"name,omitempty"`
	Timetable *ScheduleScheduleIdTimetable `json:"timetable,omitempty"`
	// The attribution-actor of the scheduled pipeline.
	AttributionActor *string `json:"attribution-actor,omitempty"`
	// Pipeline parameters represented as key-value pairs. Must contain branch or tag.
	Parameters *map[string]string `json:"parameters,omitempty"`
}

// NewUpdateScheduleParameters instantiates a new UpdateScheduleParameters object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateScheduleParameters() *UpdateScheduleParameters {
	this := UpdateScheduleParameters{}
	return &this
}

// NewUpdateScheduleParametersWithDefaults instantiates a new UpdateScheduleParameters object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateScheduleParametersWithDefaults() *UpdateScheduleParameters {
	this := UpdateScheduleParameters{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *UpdateScheduleParameters) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateScheduleParameters) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *UpdateScheduleParameters) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *UpdateScheduleParameters) SetDescription(v string) {
	o.Description = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *UpdateScheduleParameters) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateScheduleParameters) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *UpdateScheduleParameters) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *UpdateScheduleParameters) SetName(v string) {
	o.Name = &v
}

// GetTimetable returns the Timetable field value if set, zero value otherwise.
func (o *UpdateScheduleParameters) GetTimetable() ScheduleScheduleIdTimetable {
	if o == nil || o.Timetable == nil {
		var ret ScheduleScheduleIdTimetable
		return ret
	}
	return *o.Timetable
}

// GetTimetableOk returns a tuple with the Timetable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateScheduleParameters) GetTimetableOk() (*ScheduleScheduleIdTimetable, bool) {
	if o == nil || o.Timetable == nil {
		return nil, false
	}
	return o.Timetable, true
}

// HasTimetable returns a boolean if a field has been set.
func (o *UpdateScheduleParameters) HasTimetable() bool {
	if o != nil && o.Timetable != nil {
		return true
	}

	return false
}

// SetTimetable gets a reference to the given ScheduleScheduleIdTimetable and assigns it to the Timetable field.
func (o *UpdateScheduleParameters) SetTimetable(v ScheduleScheduleIdTimetable) {
	o.Timetable = &v
}

// GetAttributionActor returns the AttributionActor field value if set, zero value otherwise.
func (o *UpdateScheduleParameters) GetAttributionActor() string {
	if o == nil || o.AttributionActor == nil {
		var ret string
		return ret
	}
	return *o.AttributionActor
}

// GetAttributionActorOk returns a tuple with the AttributionActor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateScheduleParameters) GetAttributionActorOk() (*string, bool) {
	if o == nil || o.AttributionActor == nil {
		return nil, false
	}
	return o.AttributionActor, true
}

// HasAttributionActor returns a boolean if a field has been set.
func (o *UpdateScheduleParameters) HasAttributionActor() bool {
	if o != nil && o.AttributionActor != nil {
		return true
	}

	return false
}

// SetAttributionActor gets a reference to the given string and assigns it to the AttributionActor field.
func (o *UpdateScheduleParameters) SetAttributionActor(v string) {
	o.AttributionActor = &v
}

// GetParameters returns the Parameters field value if set, zero value otherwise.
func (o *UpdateScheduleParameters) GetParameters() map[string]string {
	if o == nil || o.Parameters == nil {
		var ret map[string]string
		return ret
	}
	return *o.Parameters
}

// GetParametersOk returns a tuple with the Parameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateScheduleParameters) GetParametersOk() (*map[string]string, bool) {
	if o == nil || o.Parameters == nil {
		return nil, false
	}
	return o.Parameters, true
}

// HasParameters returns a boolean if a field has been set.
func (o *UpdateScheduleParameters) HasParameters() bool {
	if o != nil && o.Parameters != nil {
		return true
	}

	return false
}

// SetParameters gets a reference to the given map[string]string and assigns it to the Parameters field.
func (o *UpdateScheduleParameters) SetParameters(v map[string]string) {
	o.Parameters = &v
}

func (o UpdateScheduleParameters) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Timetable != nil {
		toSerialize["timetable"] = o.Timetable
	}
	if o.AttributionActor != nil {
		toSerialize["attribution-actor"] = o.AttributionActor
	}
	if o.Parameters != nil {
		toSerialize["parameters"] = o.Parameters
	}
	return json.Marshal(toSerialize)
}

type NullableUpdateScheduleParameters struct {
	value *UpdateScheduleParameters
	isSet bool
}

func (v NullableUpdateScheduleParameters) Get() *UpdateScheduleParameters {
	return v.value
}

func (v *NullableUpdateScheduleParameters) Set(val *UpdateScheduleParameters) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateScheduleParameters) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateScheduleParameters) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateScheduleParameters(val *UpdateScheduleParameters) *NullableUpdateScheduleParameters {
	return &NullableUpdateScheduleParameters{value: val, isSet: true}
}

func (v NullableUpdateScheduleParameters) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateScheduleParameters) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
