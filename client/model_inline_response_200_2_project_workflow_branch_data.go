/*
CircleCI API

This describes the resources that make up the CircleCI API v2.

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineResponse2002ProjectWorkflowBranchData struct for InlineResponse2002ProjectWorkflowBranchData
type InlineResponse2002ProjectWorkflowBranchData struct {
	// The name of the workflow.
	WorkflowName string `json:"workflow_name"`
	// The VCS branch of a workflow's trigger.
	Branch  string                    `json:"branch"`
	Metrics InlineResponse2002Metrics `json:"metrics"`
	Trends  InlineResponse2002Trends  `json:"trends"`
}

// NewInlineResponse2002ProjectWorkflowBranchData instantiates a new InlineResponse2002ProjectWorkflowBranchData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse2002ProjectWorkflowBranchData(workflowName string, branch string, metrics InlineResponse2002Metrics, trends InlineResponse2002Trends) *InlineResponse2002ProjectWorkflowBranchData {
	this := InlineResponse2002ProjectWorkflowBranchData{}
	this.WorkflowName = workflowName
	this.Branch = branch
	this.Metrics = metrics
	this.Trends = trends
	return &this
}

// NewInlineResponse2002ProjectWorkflowBranchDataWithDefaults instantiates a new InlineResponse2002ProjectWorkflowBranchData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse2002ProjectWorkflowBranchDataWithDefaults() *InlineResponse2002ProjectWorkflowBranchData {
	this := InlineResponse2002ProjectWorkflowBranchData{}
	return &this
}

// GetWorkflowName returns the WorkflowName field value
func (o *InlineResponse2002ProjectWorkflowBranchData) GetWorkflowName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.WorkflowName
}

// GetWorkflowNameOk returns a tuple with the WorkflowName field value
// and a boolean to check if the value has been set.
func (o *InlineResponse2002ProjectWorkflowBranchData) GetWorkflowNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.WorkflowName, true
}

// SetWorkflowName sets field value
func (o *InlineResponse2002ProjectWorkflowBranchData) SetWorkflowName(v string) {
	o.WorkflowName = v
}

// GetBranch returns the Branch field value
func (o *InlineResponse2002ProjectWorkflowBranchData) GetBranch() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Branch
}

// GetBranchOk returns a tuple with the Branch field value
// and a boolean to check if the value has been set.
func (o *InlineResponse2002ProjectWorkflowBranchData) GetBranchOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Branch, true
}

// SetBranch sets field value
func (o *InlineResponse2002ProjectWorkflowBranchData) SetBranch(v string) {
	o.Branch = v
}

// GetMetrics returns the Metrics field value
func (o *InlineResponse2002ProjectWorkflowBranchData) GetMetrics() InlineResponse2002Metrics {
	if o == nil {
		var ret InlineResponse2002Metrics
		return ret
	}

	return o.Metrics
}

// GetMetricsOk returns a tuple with the Metrics field value
// and a boolean to check if the value has been set.
func (o *InlineResponse2002ProjectWorkflowBranchData) GetMetricsOk() (*InlineResponse2002Metrics, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Metrics, true
}

// SetMetrics sets field value
func (o *InlineResponse2002ProjectWorkflowBranchData) SetMetrics(v InlineResponse2002Metrics) {
	o.Metrics = v
}

// GetTrends returns the Trends field value
func (o *InlineResponse2002ProjectWorkflowBranchData) GetTrends() InlineResponse2002Trends {
	if o == nil {
		var ret InlineResponse2002Trends
		return ret
	}

	return o.Trends
}

// GetTrendsOk returns a tuple with the Trends field value
// and a boolean to check if the value has been set.
func (o *InlineResponse2002ProjectWorkflowBranchData) GetTrendsOk() (*InlineResponse2002Trends, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Trends, true
}

// SetTrends sets field value
func (o *InlineResponse2002ProjectWorkflowBranchData) SetTrends(v InlineResponse2002Trends) {
	o.Trends = v
}

func (o InlineResponse2002ProjectWorkflowBranchData) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["workflow_name"] = o.WorkflowName
	}
	if true {
		toSerialize["branch"] = o.Branch
	}
	if true {
		toSerialize["metrics"] = o.Metrics
	}
	if true {
		toSerialize["trends"] = o.Trends
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse2002ProjectWorkflowBranchData struct {
	value *InlineResponse2002ProjectWorkflowBranchData
	isSet bool
}

func (v NullableInlineResponse2002ProjectWorkflowBranchData) Get() *InlineResponse2002ProjectWorkflowBranchData {
	return v.value
}

func (v *NullableInlineResponse2002ProjectWorkflowBranchData) Set(val *InlineResponse2002ProjectWorkflowBranchData) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse2002ProjectWorkflowBranchData) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse2002ProjectWorkflowBranchData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse2002ProjectWorkflowBranchData(val *InlineResponse2002ProjectWorkflowBranchData) *NullableInlineResponse2002ProjectWorkflowBranchData {
	return &NullableInlineResponse2002ProjectWorkflowBranchData{value: val, isSet: true}
}

func (v NullableInlineResponse2002ProjectWorkflowBranchData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse2002ProjectWorkflowBranchData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
