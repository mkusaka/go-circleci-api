/*
CircleCI API

This describes the resources that make up the CircleCI API v2.

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineResponse2004Metrics Metrics for a single project, across all branches.
type InlineResponse2004Metrics struct {
	// The total credits consumed over the current timeseries interval.
	TotalCreditsUsed int64 `json:"total_credits_used"`
	// Total duration, in seconds.
	TotalDurationSecs int64 `json:"total_duration_secs"`
	// The total number of runs.
	TotalRuns   int64   `json:"total_runs"`
	SuccessRate float32 `json:"success_rate"`
}

// NewInlineResponse2004Metrics instantiates a new InlineResponse2004Metrics object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse2004Metrics(totalCreditsUsed int64, totalDurationSecs int64, totalRuns int64, successRate float32) *InlineResponse2004Metrics {
	this := InlineResponse2004Metrics{}
	this.TotalCreditsUsed = totalCreditsUsed
	this.TotalDurationSecs = totalDurationSecs
	this.TotalRuns = totalRuns
	this.SuccessRate = successRate
	return &this
}

// NewInlineResponse2004MetricsWithDefaults instantiates a new InlineResponse2004Metrics object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse2004MetricsWithDefaults() *InlineResponse2004Metrics {
	this := InlineResponse2004Metrics{}
	return &this
}

// GetTotalCreditsUsed returns the TotalCreditsUsed field value
func (o *InlineResponse2004Metrics) GetTotalCreditsUsed() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.TotalCreditsUsed
}

// GetTotalCreditsUsedOk returns a tuple with the TotalCreditsUsed field value
// and a boolean to check if the value has been set.
func (o *InlineResponse2004Metrics) GetTotalCreditsUsedOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TotalCreditsUsed, true
}

// SetTotalCreditsUsed sets field value
func (o *InlineResponse2004Metrics) SetTotalCreditsUsed(v int64) {
	o.TotalCreditsUsed = v
}

// GetTotalDurationSecs returns the TotalDurationSecs field value
func (o *InlineResponse2004Metrics) GetTotalDurationSecs() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.TotalDurationSecs
}

// GetTotalDurationSecsOk returns a tuple with the TotalDurationSecs field value
// and a boolean to check if the value has been set.
func (o *InlineResponse2004Metrics) GetTotalDurationSecsOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TotalDurationSecs, true
}

// SetTotalDurationSecs sets field value
func (o *InlineResponse2004Metrics) SetTotalDurationSecs(v int64) {
	o.TotalDurationSecs = v
}

// GetTotalRuns returns the TotalRuns field value
func (o *InlineResponse2004Metrics) GetTotalRuns() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.TotalRuns
}

// GetTotalRunsOk returns a tuple with the TotalRuns field value
// and a boolean to check if the value has been set.
func (o *InlineResponse2004Metrics) GetTotalRunsOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TotalRuns, true
}

// SetTotalRuns sets field value
func (o *InlineResponse2004Metrics) SetTotalRuns(v int64) {
	o.TotalRuns = v
}

// GetSuccessRate returns the SuccessRate field value
func (o *InlineResponse2004Metrics) GetSuccessRate() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.SuccessRate
}

// GetSuccessRateOk returns a tuple with the SuccessRate field value
// and a boolean to check if the value has been set.
func (o *InlineResponse2004Metrics) GetSuccessRateOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SuccessRate, true
}

// SetSuccessRate sets field value
func (o *InlineResponse2004Metrics) SetSuccessRate(v float32) {
	o.SuccessRate = v
}

func (o InlineResponse2004Metrics) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["total_credits_used"] = o.TotalCreditsUsed
	}
	if true {
		toSerialize["total_duration_secs"] = o.TotalDurationSecs
	}
	if true {
		toSerialize["total_runs"] = o.TotalRuns
	}
	if true {
		toSerialize["success_rate"] = o.SuccessRate
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse2004Metrics struct {
	value *InlineResponse2004Metrics
	isSet bool
}

func (v NullableInlineResponse2004Metrics) Get() *InlineResponse2004Metrics {
	return v.value
}

func (v *NullableInlineResponse2004Metrics) Set(val *InlineResponse2004Metrics) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse2004Metrics) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse2004Metrics) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse2004Metrics(val *InlineResponse2004Metrics) *NullableInlineResponse2004Metrics {
	return &NullableInlineResponse2004Metrics{value: val, isSet: true}
}

func (v NullableInlineResponse2004Metrics) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse2004Metrics) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
