/*
CircleCI API

This describes the resources that make up the CircleCI API v2.

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// CreateScheduleParameters The parameters for a create schedule request
type CreateScheduleParameters struct {
	// Name of the schedule.
	Name      string                       `json:"name"`
	Timetable InlineResponse20012Timetable `json:"timetable"`
	// The attribution-actor of the scheduled pipeline.
	AttributionActor string `json:"attribution-actor"`
	// Pipeline parameters represented as key-value pairs. Must contain branch or tag.
	Parameters map[string]string `json:"parameters"`
	// Description of the schedule.
	Description *string `json:"description,omitempty"`
}

// NewCreateScheduleParameters instantiates a new CreateScheduleParameters object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateScheduleParameters(name string, timetable InlineResponse20012Timetable, attributionActor string, parameters map[string]string) *CreateScheduleParameters {
	this := CreateScheduleParameters{}
	this.Name = name
	this.Timetable = timetable
	this.AttributionActor = attributionActor
	this.Parameters = parameters
	return &this
}

// NewCreateScheduleParametersWithDefaults instantiates a new CreateScheduleParameters object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateScheduleParametersWithDefaults() *CreateScheduleParameters {
	this := CreateScheduleParameters{}
	return &this
}

// GetName returns the Name field value
func (o *CreateScheduleParameters) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CreateScheduleParameters) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CreateScheduleParameters) SetName(v string) {
	o.Name = v
}

// GetTimetable returns the Timetable field value
func (o *CreateScheduleParameters) GetTimetable() InlineResponse20012Timetable {
	if o == nil {
		var ret InlineResponse20012Timetable
		return ret
	}

	return o.Timetable
}

// GetTimetableOk returns a tuple with the Timetable field value
// and a boolean to check if the value has been set.
func (o *CreateScheduleParameters) GetTimetableOk() (*InlineResponse20012Timetable, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Timetable, true
}

// SetTimetable sets field value
func (o *CreateScheduleParameters) SetTimetable(v InlineResponse20012Timetable) {
	o.Timetable = v
}

// GetAttributionActor returns the AttributionActor field value
func (o *CreateScheduleParameters) GetAttributionActor() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AttributionActor
}

// GetAttributionActorOk returns a tuple with the AttributionActor field value
// and a boolean to check if the value has been set.
func (o *CreateScheduleParameters) GetAttributionActorOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AttributionActor, true
}

// SetAttributionActor sets field value
func (o *CreateScheduleParameters) SetAttributionActor(v string) {
	o.AttributionActor = v
}

// GetParameters returns the Parameters field value
func (o *CreateScheduleParameters) GetParameters() map[string]string {
	if o == nil {
		var ret map[string]string
		return ret
	}

	return o.Parameters
}

// GetParametersOk returns a tuple with the Parameters field value
// and a boolean to check if the value has been set.
func (o *CreateScheduleParameters) GetParametersOk() (*map[string]string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Parameters, true
}

// SetParameters sets field value
func (o *CreateScheduleParameters) SetParameters(v map[string]string) {
	o.Parameters = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *CreateScheduleParameters) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateScheduleParameters) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *CreateScheduleParameters) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *CreateScheduleParameters) SetDescription(v string) {
	o.Description = &v
}

func (o CreateScheduleParameters) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["timetable"] = o.Timetable
	}
	if true {
		toSerialize["attribution-actor"] = o.AttributionActor
	}
	if true {
		toSerialize["parameters"] = o.Parameters
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	return json.Marshal(toSerialize)
}

type NullableCreateScheduleParameters struct {
	value *CreateScheduleParameters
	isSet bool
}

func (v NullableCreateScheduleParameters) Get() *CreateScheduleParameters {
	return v.value
}

func (v *NullableCreateScheduleParameters) Set(val *CreateScheduleParameters) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateScheduleParameters) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateScheduleParameters) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateScheduleParameters(val *CreateScheduleParameters) *NullableCreateScheduleParameters {
	return &NullableCreateScheduleParameters{value: val, isSet: true}
}

func (v NullableCreateScheduleParameters) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateScheduleParameters) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
