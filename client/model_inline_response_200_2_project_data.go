/*
CircleCI API

This describes the resources that make up the CircleCI API v2.

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineResponse2002ProjectData Metrics and trends data aggregated for a given project.
type InlineResponse2002ProjectData struct {
	Metrics InlineResponse2002ProjectDataMetrics `json:"metrics"`
	Trends  InlineResponse2002ProjectDataTrends  `json:"trends"`
}

// NewInlineResponse2002ProjectData instantiates a new InlineResponse2002ProjectData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse2002ProjectData(metrics InlineResponse2002ProjectDataMetrics, trends InlineResponse2002ProjectDataTrends) *InlineResponse2002ProjectData {
	this := InlineResponse2002ProjectData{}
	this.Metrics = metrics
	this.Trends = trends
	return &this
}

// NewInlineResponse2002ProjectDataWithDefaults instantiates a new InlineResponse2002ProjectData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse2002ProjectDataWithDefaults() *InlineResponse2002ProjectData {
	this := InlineResponse2002ProjectData{}
	return &this
}

// GetMetrics returns the Metrics field value
func (o *InlineResponse2002ProjectData) GetMetrics() InlineResponse2002ProjectDataMetrics {
	if o == nil {
		var ret InlineResponse2002ProjectDataMetrics
		return ret
	}

	return o.Metrics
}

// GetMetricsOk returns a tuple with the Metrics field value
// and a boolean to check if the value has been set.
func (o *InlineResponse2002ProjectData) GetMetricsOk() (*InlineResponse2002ProjectDataMetrics, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Metrics, true
}

// SetMetrics sets field value
func (o *InlineResponse2002ProjectData) SetMetrics(v InlineResponse2002ProjectDataMetrics) {
	o.Metrics = v
}

// GetTrends returns the Trends field value
func (o *InlineResponse2002ProjectData) GetTrends() InlineResponse2002ProjectDataTrends {
	if o == nil {
		var ret InlineResponse2002ProjectDataTrends
		return ret
	}

	return o.Trends
}

// GetTrendsOk returns a tuple with the Trends field value
// and a boolean to check if the value has been set.
func (o *InlineResponse2002ProjectData) GetTrendsOk() (*InlineResponse2002ProjectDataTrends, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Trends, true
}

// SetTrends sets field value
func (o *InlineResponse2002ProjectData) SetTrends(v InlineResponse2002ProjectDataTrends) {
	o.Trends = v
}

func (o InlineResponse2002ProjectData) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["metrics"] = o.Metrics
	}
	if true {
		toSerialize["trends"] = o.Trends
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse2002ProjectData struct {
	value *InlineResponse2002ProjectData
	isSet bool
}

func (v NullableInlineResponse2002ProjectData) Get() *InlineResponse2002ProjectData {
	return v.value
}

func (v *NullableInlineResponse2002ProjectData) Set(val *InlineResponse2002ProjectData) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse2002ProjectData) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse2002ProjectData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse2002ProjectData(val *InlineResponse2002ProjectData) *NullableInlineResponse2002ProjectData {
	return &NullableInlineResponse2002ProjectData{value: val, isSet: true}
}

func (v NullableInlineResponse2002ProjectData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse2002ProjectData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
