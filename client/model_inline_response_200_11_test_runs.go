/*
CircleCI API

This describes the resources that make up the CircleCI API v2.

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineResponse20011TestRuns struct for InlineResponse20011TestRuns
type InlineResponse20011TestRuns struct {
	// The number of the pipeline associated with the provided test counts
	PipelineNumber int64 `json:"pipeline_number"`
	// The ID of the workflow associated with the provided test counts
	WorkflowId interface{} `json:"workflow_id"`
	// The success rate calculated from test counts
	SuccessRate float32                       `json:"success_rate"`
	TestCounts  InlineResponse20011TestCounts `json:"test_counts"`
}

// NewInlineResponse20011TestRuns instantiates a new InlineResponse20011TestRuns object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse20011TestRuns(pipelineNumber int64, workflowId interface{}, successRate float32, testCounts InlineResponse20011TestCounts) *InlineResponse20011TestRuns {
	this := InlineResponse20011TestRuns{}
	this.PipelineNumber = pipelineNumber
	this.WorkflowId = workflowId
	this.SuccessRate = successRate
	this.TestCounts = testCounts
	return &this
}

// NewInlineResponse20011TestRunsWithDefaults instantiates a new InlineResponse20011TestRuns object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse20011TestRunsWithDefaults() *InlineResponse20011TestRuns {
	this := InlineResponse20011TestRuns{}
	return &this
}

// GetPipelineNumber returns the PipelineNumber field value
func (o *InlineResponse20011TestRuns) GetPipelineNumber() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.PipelineNumber
}

// GetPipelineNumberOk returns a tuple with the PipelineNumber field value
// and a boolean to check if the value has been set.
func (o *InlineResponse20011TestRuns) GetPipelineNumberOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PipelineNumber, true
}

// SetPipelineNumber sets field value
func (o *InlineResponse20011TestRuns) SetPipelineNumber(v int64) {
	o.PipelineNumber = v
}

// GetWorkflowId returns the WorkflowId field value
// If the value is explicit nil, the zero value for interface{} will be returned
func (o *InlineResponse20011TestRuns) GetWorkflowId() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}

	return o.WorkflowId
}

// GetWorkflowIdOk returns a tuple with the WorkflowId field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineResponse20011TestRuns) GetWorkflowIdOk() (*interface{}, bool) {
	if o == nil || o.WorkflowId == nil {
		return nil, false
	}
	return &o.WorkflowId, true
}

// SetWorkflowId sets field value
func (o *InlineResponse20011TestRuns) SetWorkflowId(v interface{}) {
	o.WorkflowId = v
}

// GetSuccessRate returns the SuccessRate field value
func (o *InlineResponse20011TestRuns) GetSuccessRate() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.SuccessRate
}

// GetSuccessRateOk returns a tuple with the SuccessRate field value
// and a boolean to check if the value has been set.
func (o *InlineResponse20011TestRuns) GetSuccessRateOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SuccessRate, true
}

// SetSuccessRate sets field value
func (o *InlineResponse20011TestRuns) SetSuccessRate(v float32) {
	o.SuccessRate = v
}

// GetTestCounts returns the TestCounts field value
func (o *InlineResponse20011TestRuns) GetTestCounts() InlineResponse20011TestCounts {
	if o == nil {
		var ret InlineResponse20011TestCounts
		return ret
	}

	return o.TestCounts
}

// GetTestCountsOk returns a tuple with the TestCounts field value
// and a boolean to check if the value has been set.
func (o *InlineResponse20011TestRuns) GetTestCountsOk() (*InlineResponse20011TestCounts, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TestCounts, true
}

// SetTestCounts sets field value
func (o *InlineResponse20011TestRuns) SetTestCounts(v InlineResponse20011TestCounts) {
	o.TestCounts = v
}

func (o InlineResponse20011TestRuns) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["pipeline_number"] = o.PipelineNumber
	}
	if o.WorkflowId != nil {
		toSerialize["workflow_id"] = o.WorkflowId
	}
	if true {
		toSerialize["success_rate"] = o.SuccessRate
	}
	if true {
		toSerialize["test_counts"] = o.TestCounts
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse20011TestRuns struct {
	value *InlineResponse20011TestRuns
	isSet bool
}

func (v NullableInlineResponse20011TestRuns) Get() *InlineResponse20011TestRuns {
	return v.value
}

func (v *NullableInlineResponse20011TestRuns) Set(val *InlineResponse20011TestRuns) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse20011TestRuns) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse20011TestRuns) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse20011TestRuns(val *InlineResponse20011TestRuns) *NullableInlineResponse20011TestRuns {
	return &NullableInlineResponse20011TestRuns{value: val, isSet: true}
}

func (v NullableInlineResponse20011TestRuns) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse20011TestRuns) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
