/*
CircleCI API

This describes the resources that make up the CircleCI API v2.

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineResponse202 A response to rerunning a workflow
type InlineResponse202 struct {
	// The ID of the newly-created workflow.
	WorkflowId string `json:"workflow_id"`
}

// NewInlineResponse202 instantiates a new InlineResponse202 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse202(workflowId string) *InlineResponse202 {
	this := InlineResponse202{}
	this.WorkflowId = workflowId
	return &this
}

// NewInlineResponse202WithDefaults instantiates a new InlineResponse202 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse202WithDefaults() *InlineResponse202 {
	this := InlineResponse202{}
	return &this
}

// GetWorkflowId returns the WorkflowId field value
func (o *InlineResponse202) GetWorkflowId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.WorkflowId
}

// GetWorkflowIdOk returns a tuple with the WorkflowId field value
// and a boolean to check if the value has been set.
func (o *InlineResponse202) GetWorkflowIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.WorkflowId, true
}

// SetWorkflowId sets field value
func (o *InlineResponse202) SetWorkflowId(v string) {
	o.WorkflowId = v
}

func (o InlineResponse202) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["workflow_id"] = o.WorkflowId
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse202 struct {
	value *InlineResponse202
	isSet bool
}

func (v NullableInlineResponse202) Get() *InlineResponse202 {
	return v.value
}

func (v *NullableInlineResponse202) Set(val *InlineResponse202) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse202) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse202) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse202(val *InlineResponse202) *NullableInlineResponse202 {
	return &NullableInlineResponse202{value: val, isSet: true}
}

func (v NullableInlineResponse202) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse202) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
