//go:build go1.18
// +build go1.18

// Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.8.3, generator: @autorest/go@4.0.0-preview.40)
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package client

const host = "https://circleci.com/api/v2"

const (
	moduleName    = ""
	moduleVersion = "v0.0.1"
)

// Enum10 - Job status.
type Enum10 string

const (
	Enum10Canceled     Enum10 = "canceled"
	Enum10Failed       Enum10 = "failed"
	Enum10NotRun       Enum10 = "not_run"
	Enum10Success      Enum10 = "success"
	Enum10Unauthorized Enum10 = "unauthorized"
)

// PossibleEnum10Values returns the possible values for the Enum10 const type.
func PossibleEnum10Values() []Enum10 {
	return []Enum10{
		Enum10Canceled,
		Enum10Failed,
		Enum10NotRun,
		Enum10Success,
		Enum10Unauthorized,
	}
}

// Enum15 - The current state of the pipeline.
type Enum15 string

const (
	Enum15Created      Enum15 = "created"
	Enum15Errored      Enum15 = "errored"
	Enum15Pending      Enum15 = "pending"
	Enum15Setup        Enum15 = "setup"
	Enum15SetupPending Enum15 = "setup-pending"
)

// PossibleEnum15Values returns the possible values for the Enum15 const type.
func PossibleEnum15Values() []Enum15 {
	return []Enum15{
		Enum15Created,
		Enum15Errored,
		Enum15Pending,
		Enum15Setup,
		Enum15SetupPending,
	}
}

// Enum16 - The type of trigger.
type Enum16 string

const (
	Enum16API               Enum16 = "api"
	Enum16Explicit          Enum16 = "explicit"
	Enum16ScheduledPipeline Enum16 = "scheduled_pipeline"
	Enum16Webhook           Enum16 = "webhook"
)

// PossibleEnum16Values returns the possible values for the Enum16 const type.
func PossibleEnum16Values() []Enum16 {
	return []Enum16{
		Enum16API,
		Enum16Explicit,
		Enum16ScheduledPipeline,
		Enum16Webhook,
	}
}

// Enum18 - The current status of the workflow.
type Enum18 string

const (
	Enum18Canceled     Enum18 = "canceled"
	Enum18Error        Enum18 = "error"
	Enum18Failed       Enum18 = "failed"
	Enum18Failing      Enum18 = "failing"
	Enum18NotRun       Enum18 = "not_run"
	Enum18OnHold       Enum18 = "on_hold"
	Enum18Running      Enum18 = "running"
	Enum18Success      Enum18 = "success"
	Enum18Unauthorized Enum18 = "unauthorized"
)

// PossibleEnum18Values returns the possible values for the Enum18 const type.
func PossibleEnum18Values() []Enum18 {
	return []Enum18{
		Enum18Canceled,
		Enum18Error,
		Enum18Failed,
		Enum18Failing,
		Enum18NotRun,
		Enum18OnHold,
		Enum18Running,
		Enum18Success,
		Enum18Unauthorized,
	}
}

// Enum19 - The VCS provider
type Enum19 string

const (
	Enum19Bitbucket Enum19 = "Bitbucket"
	Enum19CircleCI  Enum19 = "CircleCI"
	Enum19GitHub    Enum19 = "GitHub"
)

// PossibleEnum19Values returns the possible values for the Enum19 const type.
func PossibleEnum19Values() []Enum19 {
	return []Enum19{
		Enum19Bitbucket,
		Enum19CircleCI,
		Enum19GitHub,
	}
}

type Enum2 string

const (
	Enum2Account      Enum2 = "account"
	Enum2Organization Enum2 = "organization"
)

// PossibleEnum2Values returns the possible values for the Enum2 const type.
func PossibleEnum2Values() []Enum2 {
	return []Enum2{
		Enum2Account,
		Enum2Organization,
	}
}

// Enum22 - The type of checkout key. This may be either deploy-key or github-user-key.
type Enum22 string

const (
	Enum22DeployKey     Enum22 = "deploy-key"
	Enum22GithubUserKey Enum22 = "github-user-key"
)

// PossibleEnum22Values returns the possible values for the Enum22 const type.
func PossibleEnum22Values() []Enum22 {
	return []Enum22{
		Enum22DeployKey,
		Enum22GithubUserKey,
	}
}

// Enum23 - The type of checkout key. This may be either deploy-key or github-user-key.
type Enum23 string

const (
	Enum23DeployKey     Enum23 = "deploy-key"
	Enum23GithubUserKey Enum23 = "github-user-key"
)

// PossibleEnum23Values returns the possible values for the Enum23 const type.
func PossibleEnum23Values() []Enum23 {
	return []Enum23{
		Enum23DeployKey,
		Enum23GithubUserKey,
	}
}

// Enum24 - The type of error.
type Enum24 string

const (
	Enum24Config      Enum24 = "config"
	Enum24ConfigFetch Enum24 = "config-fetch"
	Enum24Other       Enum24 = "other"
	Enum24Permission  Enum24 = "permission"
	Enum24Plan        Enum24 = "plan"
	Enum24Timeout     Enum24 = "timeout"
)

// PossibleEnum24Values returns the possible values for the Enum24 const type.
func PossibleEnum24Values() []Enum24 {
	return []Enum24{
		Enum24Config,
		Enum24ConfigFetch,
		Enum24Other,
		Enum24Permission,
		Enum24Plan,
		Enum24Timeout,
	}
}

// Enum25 - The current state of the pipeline.
type Enum25 string

const (
	Enum25Created      Enum25 = "created"
	Enum25Errored      Enum25 = "errored"
	Enum25Pending      Enum25 = "pending"
	Enum25Setup        Enum25 = "setup"
	Enum25SetupPending Enum25 = "setup-pending"
)

// PossibleEnum25Values returns the possible values for the Enum25 const type.
func PossibleEnum25Values() []Enum25 {
	return []Enum25{
		Enum25Created,
		Enum25Errored,
		Enum25Pending,
		Enum25Setup,
		Enum25SetupPending,
	}
}

// Enum26 - The type of trigger.
type Enum26 string

const (
	Enum26API               Enum26 = "api"
	Enum26Explicit          Enum26 = "explicit"
	Enum26ScheduledPipeline Enum26 = "scheduled_pipeline"
	Enum26Webhook           Enum26 = "webhook"
)

// PossibleEnum26Values returns the possible values for the Enum26 const type.
func PossibleEnum26Values() []Enum26 {
	return []Enum26{
		Enum26API,
		Enum26Explicit,
		Enum26ScheduledPipeline,
		Enum26Webhook,
	}
}

// Enum27 - The current state of the pipeline.
type Enum27 string

const (
	Enum27Created      Enum27 = "created"
	Enum27Errored      Enum27 = "errored"
	Enum27Pending      Enum27 = "pending"
	Enum27Setup        Enum27 = "setup"
	Enum27SetupPending Enum27 = "setup-pending"
)

// PossibleEnum27Values returns the possible values for the Enum27 const type.
func PossibleEnum27Values() []Enum27 {
	return []Enum27{
		Enum27Created,
		Enum27Errored,
		Enum27Pending,
		Enum27Setup,
		Enum27SetupPending,
	}
}

// Enum28 - The type of error.
type Enum28 string

const (
	Enum28Config      Enum28 = "config"
	Enum28ConfigFetch Enum28 = "config-fetch"
	Enum28Other       Enum28 = "other"
	Enum28Permission  Enum28 = "permission"
	Enum28Plan        Enum28 = "plan"
	Enum28Timeout     Enum28 = "timeout"
)

// PossibleEnum28Values returns the possible values for the Enum28 const type.
func PossibleEnum28Values() []Enum28 {
	return []Enum28{
		Enum28Config,
		Enum28ConfigFetch,
		Enum28Other,
		Enum28Permission,
		Enum28Plan,
		Enum28Timeout,
	}
}

// Enum29 - The current state of the pipeline.
type Enum29 string

const (
	Enum29Created      Enum29 = "created"
	Enum29Errored      Enum29 = "errored"
	Enum29Pending      Enum29 = "pending"
	Enum29Setup        Enum29 = "setup"
	Enum29SetupPending Enum29 = "setup-pending"
)

// PossibleEnum29Values returns the possible values for the Enum29 const type.
func PossibleEnum29Values() []Enum29 {
	return []Enum29{
		Enum29Created,
		Enum29Errored,
		Enum29Pending,
		Enum29Setup,
		Enum29SetupPending,
	}
}

type Enum3 string

const (
	Enum3Last24Hours Enum3 = "last-24-hours"
	Enum3Last30Days  Enum3 = "last-30-days"
	Enum3Last60Days  Enum3 = "last-60-days"
	Enum3Last7Days   Enum3 = "last-7-days"
	Enum3Last90Days  Enum3 = "last-90-days"
)

// PossibleEnum3Values returns the possible values for the Enum3 const type.
func PossibleEnum3Values() []Enum3 {
	return []Enum3{
		Enum3Last24Hours,
		Enum3Last30Days,
		Enum3Last60Days,
		Enum3Last7Days,
		Enum3Last90Days,
	}
}

// Enum30 - The type of trigger.
type Enum30 string

const (
	Enum30API               Enum30 = "api"
	Enum30Explicit          Enum30 = "explicit"
	Enum30ScheduledPipeline Enum30 = "scheduled_pipeline"
	Enum30Webhook           Enum30 = "webhook"
)

// PossibleEnum30Values returns the possible values for the Enum30 const type.
func PossibleEnum30Values() []Enum30 {
	return []Enum30{
		Enum30API,
		Enum30Explicit,
		Enum30ScheduledPipeline,
		Enum30Webhook,
	}
}

// Enum31 - The type of error.
type Enum31 string

const (
	Enum31Config      Enum31 = "config"
	Enum31ConfigFetch Enum31 = "config-fetch"
	Enum31Other       Enum31 = "other"
	Enum31Permission  Enum31 = "permission"
	Enum31Plan        Enum31 = "plan"
	Enum31Timeout     Enum31 = "timeout"
)

// PossibleEnum31Values returns the possible values for the Enum31 const type.
func PossibleEnum31Values() []Enum31 {
	return []Enum31{
		Enum31Config,
		Enum31ConfigFetch,
		Enum31Other,
		Enum31Permission,
		Enum31Plan,
		Enum31Timeout,
	}
}

// Enum32 - The current state of the pipeline.
type Enum32 string

const (
	Enum32Created      Enum32 = "created"
	Enum32Errored      Enum32 = "errored"
	Enum32Pending      Enum32 = "pending"
	Enum32Setup        Enum32 = "setup"
	Enum32SetupPending Enum32 = "setup-pending"
)

// PossibleEnum32Values returns the possible values for the Enum32 const type.
func PossibleEnum32Values() []Enum32 {
	return []Enum32{
		Enum32Created,
		Enum32Errored,
		Enum32Pending,
		Enum32Setup,
		Enum32SetupPending,
	}
}

// Enum33 - The type of trigger.
type Enum33 string

const (
	Enum33API               Enum33 = "api"
	Enum33Explicit          Enum33 = "explicit"
	Enum33ScheduledPipeline Enum33 = "scheduled_pipeline"
	Enum33Webhook           Enum33 = "webhook"
)

// PossibleEnum33Values returns the possible values for the Enum33 const type.
func PossibleEnum33Values() []Enum33 {
	return []Enum33{
		Enum33API,
		Enum33Explicit,
		Enum33ScheduledPipeline,
		Enum33Webhook,
	}
}

type Enum4 string

const (
	Enum4Daily  Enum4 = "daily"
	Enum4Hourly Enum4 = "hourly"
)

// PossibleEnum4Values returns the possible values for the Enum4 const type.
func PossibleEnum4Values() []Enum4 {
	return []Enum4{
		Enum4Daily,
		Enum4Hourly,
	}
}

// Enum42 - Tag used for the workflow
type Enum42 string

const (
	Enum42Setup Enum42 = "setup"
)

// PossibleEnum42Values returns the possible values for the Enum42 const type.
func PossibleEnum42Values() []Enum42 {
	return []Enum42{
		Enum42Setup,
	}
}

// Enum43 - The current status of the workflow.
type Enum43 string

const (
	Enum43Canceled     Enum43 = "canceled"
	Enum43Error        Enum43 = "error"
	Enum43Failed       Enum43 = "failed"
	Enum43Failing      Enum43 = "failing"
	Enum43NotRun       Enum43 = "not_run"
	Enum43OnHold       Enum43 = "on_hold"
	Enum43Running      Enum43 = "running"
	Enum43Success      Enum43 = "success"
	Enum43Unauthorized Enum43 = "unauthorized"
)

// PossibleEnum43Values returns the possible values for the Enum43 const type.
func PossibleEnum43Values() []Enum43 {
	return []Enum43{
		Enum43Canceled,
		Enum43Error,
		Enum43Failed,
		Enum43Failing,
		Enum43NotRun,
		Enum43OnHold,
		Enum43Running,
		Enum43Success,
		Enum43Unauthorized,
	}
}

// Enum44 - The type of job.
type Enum44 string

const (
	Enum44Approval Enum44 = "approval"
	Enum44Build    Enum44 = "build"
)

// PossibleEnum44Values returns the possible values for the Enum44 const type.
func PossibleEnum44Values() []Enum44 {
	return []Enum44{
		Enum44Approval,
		Enum44Build,
	}
}

type Enum5 string

const (
	Enum5Daily  Enum5 = "daily"
	Enum5Hourly Enum5 = "hourly"
)

// PossibleEnum5Values returns the possible values for the Enum5 const type.
func PossibleEnum5Values() []Enum5 {
	return []Enum5{
		Enum5Daily,
		Enum5Hourly,
	}
}

type Enum6 string

const (
	Enum6Last24Hours Enum6 = "last-24-hours"
	Enum6Last30Days  Enum6 = "last-30-days"
	Enum6Last60Days  Enum6 = "last-60-days"
	Enum6Last7Days   Enum6 = "last-7-days"
	Enum6Last90Days  Enum6 = "last-90-days"
)

// PossibleEnum6Values returns the possible values for the Enum6 const type.
func PossibleEnum6Values() []Enum6 {
	return []Enum6{
		Enum6Last24Hours,
		Enum6Last30Days,
		Enum6Last60Days,
		Enum6Last7Days,
		Enum6Last90Days,
	}
}

type Enum7 string

const (
	Enum7Last24Hours Enum7 = "last-24-hours"
	Enum7Last30Days  Enum7 = "last-30-days"
	Enum7Last60Days  Enum7 = "last-60-days"
	Enum7Last7Days   Enum7 = "last-7-days"
	Enum7Last90Days  Enum7 = "last-90-days"
)

// PossibleEnum7Values returns the possible values for the Enum7 const type.
func PossibleEnum7Values() []Enum7 {
	return []Enum7{
		Enum7Last24Hours,
		Enum7Last30Days,
		Enum7Last60Days,
		Enum7Last7Days,
		Enum7Last90Days,
	}
}

type Enum9 string

const (
	Enum9Last24Hours Enum9 = "last-24-hours"
	Enum9Last30Days  Enum9 = "last-30-days"
	Enum9Last60Days  Enum9 = "last-60-days"
	Enum9Last7Days   Enum9 = "last-7-days"
	Enum9Last90Days  Enum9 = "last-90-days"
)

// PossibleEnum9Values returns the possible values for the Enum9 const type.
func PossibleEnum9Values() []Enum9 {
	return []Enum9{
		Enum9Last24Hours,
		Enum9Last30Days,
		Enum9Last60Days,
		Enum9Last7Days,
		Enum9Last90Days,
	}
}

// Get200ApplicationJSONPropertiesItemsTimetableDaysOfWeekItem - Day in a week, in three letters format
type Get200ApplicationJSONPropertiesItemsTimetableDaysOfWeekItem string

const (
	Get200ApplicationJSONPropertiesItemsTimetableDaysOfWeekItemFRI Get200ApplicationJSONPropertiesItemsTimetableDaysOfWeekItem = "FRI"
	Get200ApplicationJSONPropertiesItemsTimetableDaysOfWeekItemMON Get200ApplicationJSONPropertiesItemsTimetableDaysOfWeekItem = "MON"
	Get200ApplicationJSONPropertiesItemsTimetableDaysOfWeekItemSAT Get200ApplicationJSONPropertiesItemsTimetableDaysOfWeekItem = "SAT"
	Get200ApplicationJSONPropertiesItemsTimetableDaysOfWeekItemSUN Get200ApplicationJSONPropertiesItemsTimetableDaysOfWeekItem = "SUN"
	Get200ApplicationJSONPropertiesItemsTimetableDaysOfWeekItemTHU Get200ApplicationJSONPropertiesItemsTimetableDaysOfWeekItem = "THU"
	Get200ApplicationJSONPropertiesItemsTimetableDaysOfWeekItemTUE Get200ApplicationJSONPropertiesItemsTimetableDaysOfWeekItem = "TUE"
	Get200ApplicationJSONPropertiesItemsTimetableDaysOfWeekItemWED Get200ApplicationJSONPropertiesItemsTimetableDaysOfWeekItem = "WED"
)

// PossibleGet200ApplicationJSONPropertiesItemsTimetableDaysOfWeekItemValues returns the possible values for the Get200ApplicationJSONPropertiesItemsTimetableDaysOfWeekItem const type.
func PossibleGet200ApplicationJSONPropertiesItemsTimetableDaysOfWeekItemValues() []Get200ApplicationJSONPropertiesItemsTimetableDaysOfWeekItem {
	return []Get200ApplicationJSONPropertiesItemsTimetableDaysOfWeekItem{
		Get200ApplicationJSONPropertiesItemsTimetableDaysOfWeekItemFRI,
		Get200ApplicationJSONPropertiesItemsTimetableDaysOfWeekItemMON,
		Get200ApplicationJSONPropertiesItemsTimetableDaysOfWeekItemSAT,
		Get200ApplicationJSONPropertiesItemsTimetableDaysOfWeekItemSUN,
		Get200ApplicationJSONPropertiesItemsTimetableDaysOfWeekItemTHU,
		Get200ApplicationJSONPropertiesItemsTimetableDaysOfWeekItemTUE,
		Get200ApplicationJSONPropertiesItemsTimetableDaysOfWeekItemWED,
	}
}

// Get200ApplicationJSONPropertiesItemsTriggerType - The type of trigger.
type Get200ApplicationJSONPropertiesItemsTriggerType string

const (
	Get200ApplicationJSONPropertiesItemsTriggerTypeAPI               Get200ApplicationJSONPropertiesItemsTriggerType = "api"
	Get200ApplicationJSONPropertiesItemsTriggerTypeExplicit          Get200ApplicationJSONPropertiesItemsTriggerType = "explicit"
	Get200ApplicationJSONPropertiesItemsTriggerTypeScheduledPipeline Get200ApplicationJSONPropertiesItemsTriggerType = "scheduled_pipeline"
	Get200ApplicationJSONPropertiesItemsTriggerTypeWebhook           Get200ApplicationJSONPropertiesItemsTriggerType = "webhook"
)

// PossibleGet200ApplicationJSONPropertiesItemsTriggerTypeValues returns the possible values for the Get200ApplicationJSONPropertiesItemsTriggerType const type.
func PossibleGet200ApplicationJSONPropertiesItemsTriggerTypeValues() []Get200ApplicationJSONPropertiesItemsTriggerType {
	return []Get200ApplicationJSONPropertiesItemsTriggerType{
		Get200ApplicationJSONPropertiesItemsTriggerTypeAPI,
		Get200ApplicationJSONPropertiesItemsTriggerTypeExplicit,
		Get200ApplicationJSONPropertiesItemsTriggerTypeScheduledPipeline,
		Get200ApplicationJSONPropertiesItemsTriggerTypeWebhook,
	}
}

// Get200ApplicationJSONPropertiesPropertiesItemsItem - Day in a week, in three letters format
type Get200ApplicationJSONPropertiesPropertiesItemsItem string

const (
	Get200ApplicationJSONPropertiesPropertiesItemsItemFRI Get200ApplicationJSONPropertiesPropertiesItemsItem = "FRI"
	Get200ApplicationJSONPropertiesPropertiesItemsItemMON Get200ApplicationJSONPropertiesPropertiesItemsItem = "MON"
	Get200ApplicationJSONPropertiesPropertiesItemsItemSAT Get200ApplicationJSONPropertiesPropertiesItemsItem = "SAT"
	Get200ApplicationJSONPropertiesPropertiesItemsItemSUN Get200ApplicationJSONPropertiesPropertiesItemsItem = "SUN"
	Get200ApplicationJSONPropertiesPropertiesItemsItemTHU Get200ApplicationJSONPropertiesPropertiesItemsItem = "THU"
	Get200ApplicationJSONPropertiesPropertiesItemsItemTUE Get200ApplicationJSONPropertiesPropertiesItemsItem = "TUE"
	Get200ApplicationJSONPropertiesPropertiesItemsItemWED Get200ApplicationJSONPropertiesPropertiesItemsItem = "WED"
)

// PossibleGet200ApplicationJSONPropertiesPropertiesItemsItemValues returns the possible values for the Get200ApplicationJSONPropertiesPropertiesItemsItem const type.
func PossibleGet200ApplicationJSONPropertiesPropertiesItemsItemValues() []Get200ApplicationJSONPropertiesPropertiesItemsItem {
	return []Get200ApplicationJSONPropertiesPropertiesItemsItem{
		Get200ApplicationJSONPropertiesPropertiesItemsItemFRI,
		Get200ApplicationJSONPropertiesPropertiesItemsItemMON,
		Get200ApplicationJSONPropertiesPropertiesItemsItemSAT,
		Get200ApplicationJSONPropertiesPropertiesItemsItemSUN,
		Get200ApplicationJSONPropertiesPropertiesItemsItemTHU,
		Get200ApplicationJSONPropertiesPropertiesItemsItemTUE,
		Get200ApplicationJSONPropertiesPropertiesItemsItemWED,
	}
}

// GetResponses200ContentApplicationJSONSchemaErrorsItemType - The type of error.
type GetResponses200ContentApplicationJSONSchemaErrorsItemType string

const (
	GetResponses200ContentApplicationJSONSchemaErrorsItemTypeConfig      GetResponses200ContentApplicationJSONSchemaErrorsItemType = "config"
	GetResponses200ContentApplicationJSONSchemaErrorsItemTypeConfigFetch GetResponses200ContentApplicationJSONSchemaErrorsItemType = "config-fetch"
	GetResponses200ContentApplicationJSONSchemaErrorsItemTypeOther       GetResponses200ContentApplicationJSONSchemaErrorsItemType = "other"
	GetResponses200ContentApplicationJSONSchemaErrorsItemTypePermission  GetResponses200ContentApplicationJSONSchemaErrorsItemType = "permission"
	GetResponses200ContentApplicationJSONSchemaErrorsItemTypePlan        GetResponses200ContentApplicationJSONSchemaErrorsItemType = "plan"
	GetResponses200ContentApplicationJSONSchemaErrorsItemTypeTimeout     GetResponses200ContentApplicationJSONSchemaErrorsItemType = "timeout"
)

// PossibleGetResponses200ContentApplicationJSONSchemaErrorsItemTypeValues returns the possible values for the GetResponses200ContentApplicationJSONSchemaErrorsItemType const type.
func PossibleGetResponses200ContentApplicationJSONSchemaErrorsItemTypeValues() []GetResponses200ContentApplicationJSONSchemaErrorsItemType {
	return []GetResponses200ContentApplicationJSONSchemaErrorsItemType{
		GetResponses200ContentApplicationJSONSchemaErrorsItemTypeConfig,
		GetResponses200ContentApplicationJSONSchemaErrorsItemTypeConfigFetch,
		GetResponses200ContentApplicationJSONSchemaErrorsItemTypeOther,
		GetResponses200ContentApplicationJSONSchemaErrorsItemTypePermission,
		GetResponses200ContentApplicationJSONSchemaErrorsItemTypePlan,
		GetResponses200ContentApplicationJSONSchemaErrorsItemTypeTimeout,
	}
}

// GetResponses200ContentApplicationJSONSchemaItemErrorsItemType - The type of error.
type GetResponses200ContentApplicationJSONSchemaItemErrorsItemType string

const (
	GetResponses200ContentApplicationJSONSchemaItemErrorsItemTypeConfig      GetResponses200ContentApplicationJSONSchemaItemErrorsItemType = "config"
	GetResponses200ContentApplicationJSONSchemaItemErrorsItemTypeConfigFetch GetResponses200ContentApplicationJSONSchemaItemErrorsItemType = "config-fetch"
	GetResponses200ContentApplicationJSONSchemaItemErrorsItemTypeOther       GetResponses200ContentApplicationJSONSchemaItemErrorsItemType = "other"
	GetResponses200ContentApplicationJSONSchemaItemErrorsItemTypePermission  GetResponses200ContentApplicationJSONSchemaItemErrorsItemType = "permission"
	GetResponses200ContentApplicationJSONSchemaItemErrorsItemTypePlan        GetResponses200ContentApplicationJSONSchemaItemErrorsItemType = "plan"
	GetResponses200ContentApplicationJSONSchemaItemErrorsItemTypeTimeout     GetResponses200ContentApplicationJSONSchemaItemErrorsItemType = "timeout"
)

// PossibleGetResponses200ContentApplicationJSONSchemaItemErrorsItemTypeValues returns the possible values for the GetResponses200ContentApplicationJSONSchemaItemErrorsItemType const type.
func PossibleGetResponses200ContentApplicationJSONSchemaItemErrorsItemTypeValues() []GetResponses200ContentApplicationJSONSchemaItemErrorsItemType {
	return []GetResponses200ContentApplicationJSONSchemaItemErrorsItemType{
		GetResponses200ContentApplicationJSONSchemaItemErrorsItemTypeConfig,
		GetResponses200ContentApplicationJSONSchemaItemErrorsItemTypeConfigFetch,
		GetResponses200ContentApplicationJSONSchemaItemErrorsItemTypeOther,
		GetResponses200ContentApplicationJSONSchemaItemErrorsItemTypePermission,
		GetResponses200ContentApplicationJSONSchemaItemErrorsItemTypePlan,
		GetResponses200ContentApplicationJSONSchemaItemErrorsItemTypeTimeout,
	}
}

// GetResponses200ContentApplicationJSONSchemaItemState - The current state of the pipeline.
type GetResponses200ContentApplicationJSONSchemaItemState string

const (
	GetResponses200ContentApplicationJSONSchemaItemStateCreated      GetResponses200ContentApplicationJSONSchemaItemState = "created"
	GetResponses200ContentApplicationJSONSchemaItemStateErrored      GetResponses200ContentApplicationJSONSchemaItemState = "errored"
	GetResponses200ContentApplicationJSONSchemaItemStatePending      GetResponses200ContentApplicationJSONSchemaItemState = "pending"
	GetResponses200ContentApplicationJSONSchemaItemStateSetup        GetResponses200ContentApplicationJSONSchemaItemState = "setup"
	GetResponses200ContentApplicationJSONSchemaItemStateSetupPending GetResponses200ContentApplicationJSONSchemaItemState = "setup-pending"
)

// PossibleGetResponses200ContentApplicationJSONSchemaItemStateValues returns the possible values for the GetResponses200ContentApplicationJSONSchemaItemState const type.
func PossibleGetResponses200ContentApplicationJSONSchemaItemStateValues() []GetResponses200ContentApplicationJSONSchemaItemState {
	return []GetResponses200ContentApplicationJSONSchemaItemState{
		GetResponses200ContentApplicationJSONSchemaItemStateCreated,
		GetResponses200ContentApplicationJSONSchemaItemStateErrored,
		GetResponses200ContentApplicationJSONSchemaItemStatePending,
		GetResponses200ContentApplicationJSONSchemaItemStateSetup,
		GetResponses200ContentApplicationJSONSchemaItemStateSetupPending,
	}
}

// GetResponses200ContentApplicationJSONSchemaItemStatus - Workflow status.
type GetResponses200ContentApplicationJSONSchemaItemStatus string

const (
	GetResponses200ContentApplicationJSONSchemaItemStatusCanceled     GetResponses200ContentApplicationJSONSchemaItemStatus = "canceled"
	GetResponses200ContentApplicationJSONSchemaItemStatusError        GetResponses200ContentApplicationJSONSchemaItemStatus = "error"
	GetResponses200ContentApplicationJSONSchemaItemStatusFailed       GetResponses200ContentApplicationJSONSchemaItemStatus = "failed"
	GetResponses200ContentApplicationJSONSchemaItemStatusSuccess      GetResponses200ContentApplicationJSONSchemaItemStatus = "success"
	GetResponses200ContentApplicationJSONSchemaItemStatusUnauthorized GetResponses200ContentApplicationJSONSchemaItemStatus = "unauthorized"
)

// PossibleGetResponses200ContentApplicationJSONSchemaItemStatusValues returns the possible values for the GetResponses200ContentApplicationJSONSchemaItemStatus const type.
func PossibleGetResponses200ContentApplicationJSONSchemaItemStatusValues() []GetResponses200ContentApplicationJSONSchemaItemStatus {
	return []GetResponses200ContentApplicationJSONSchemaItemStatus{
		GetResponses200ContentApplicationJSONSchemaItemStatusCanceled,
		GetResponses200ContentApplicationJSONSchemaItemStatusError,
		GetResponses200ContentApplicationJSONSchemaItemStatusFailed,
		GetResponses200ContentApplicationJSONSchemaItemStatusSuccess,
		GetResponses200ContentApplicationJSONSchemaItemStatusUnauthorized,
	}
}

// GetResponses200ContentApplicationJSONSchemaItemTag - Tag used for the workflow
type GetResponses200ContentApplicationJSONSchemaItemTag string

const (
	GetResponses200ContentApplicationJSONSchemaItemTagSetup GetResponses200ContentApplicationJSONSchemaItemTag = "setup"
)

// PossibleGetResponses200ContentApplicationJSONSchemaItemTagValues returns the possible values for the GetResponses200ContentApplicationJSONSchemaItemTag const type.
func PossibleGetResponses200ContentApplicationJSONSchemaItemTagValues() []GetResponses200ContentApplicationJSONSchemaItemTag {
	return []GetResponses200ContentApplicationJSONSchemaItemTag{
		GetResponses200ContentApplicationJSONSchemaItemTagSetup,
	}
}

// GetResponses200ContentApplicationJSONSchemaItemType - The type of checkout key. This may be either deploy-key or github-user-key.
type GetResponses200ContentApplicationJSONSchemaItemType string

const (
	GetResponses200ContentApplicationJSONSchemaItemTypeDeployKey     GetResponses200ContentApplicationJSONSchemaItemType = "deploy-key"
	GetResponses200ContentApplicationJSONSchemaItemTypeGithubUserKey GetResponses200ContentApplicationJSONSchemaItemType = "github-user-key"
)

// PossibleGetResponses200ContentApplicationJSONSchemaItemTypeValues returns the possible values for the GetResponses200ContentApplicationJSONSchemaItemType const type.
func PossibleGetResponses200ContentApplicationJSONSchemaItemTypeValues() []GetResponses200ContentApplicationJSONSchemaItemType {
	return []GetResponses200ContentApplicationJSONSchemaItemType{
		GetResponses200ContentApplicationJSONSchemaItemTypeDeployKey,
		GetResponses200ContentApplicationJSONSchemaItemTypeGithubUserKey,
	}
}

// Patch200ApplicationJSONPropertiesItemsItem - Day in a week, in three letters format
type Patch200ApplicationJSONPropertiesItemsItem string

const (
	Patch200ApplicationJSONPropertiesItemsItemFRI Patch200ApplicationJSONPropertiesItemsItem = "FRI"
	Patch200ApplicationJSONPropertiesItemsItemMON Patch200ApplicationJSONPropertiesItemsItem = "MON"
	Patch200ApplicationJSONPropertiesItemsItemSAT Patch200ApplicationJSONPropertiesItemsItem = "SAT"
	Patch200ApplicationJSONPropertiesItemsItemSUN Patch200ApplicationJSONPropertiesItemsItem = "SUN"
	Patch200ApplicationJSONPropertiesItemsItemTHU Patch200ApplicationJSONPropertiesItemsItem = "THU"
	Patch200ApplicationJSONPropertiesItemsItemTUE Patch200ApplicationJSONPropertiesItemsItem = "TUE"
	Patch200ApplicationJSONPropertiesItemsItemWED Patch200ApplicationJSONPropertiesItemsItem = "WED"
)

// PossiblePatch200ApplicationJSONPropertiesItemsItemValues returns the possible values for the Patch200ApplicationJSONPropertiesItemsItem const type.
func PossiblePatch200ApplicationJSONPropertiesItemsItemValues() []Patch200ApplicationJSONPropertiesItemsItem {
	return []Patch200ApplicationJSONPropertiesItemsItem{
		Patch200ApplicationJSONPropertiesItemsItemFRI,
		Patch200ApplicationJSONPropertiesItemsItemMON,
		Patch200ApplicationJSONPropertiesItemsItemSAT,
		Patch200ApplicationJSONPropertiesItemsItemSUN,
		Patch200ApplicationJSONPropertiesItemsItemTHU,
		Patch200ApplicationJSONPropertiesItemsItemTUE,
		Patch200ApplicationJSONPropertiesItemsItemWED,
	}
}

// PatchContentSchemaAttributionActor - The attribution-actor of the scheduled pipeline.
type PatchContentSchemaAttributionActor string

const (
	PatchContentSchemaAttributionActorCurrent PatchContentSchemaAttributionActor = "current"
	PatchContentSchemaAttributionActorSystem  PatchContentSchemaAttributionActor = "system"
)

// PossiblePatchContentSchemaAttributionActorValues returns the possible values for the PatchContentSchemaAttributionActor const type.
func PossiblePatchContentSchemaAttributionActorValues() []PatchContentSchemaAttributionActor {
	return []PatchContentSchemaAttributionActor{
		PatchContentSchemaAttributionActorCurrent,
		PatchContentSchemaAttributionActorSystem,
	}
}

// PatchContentSchemaTimetableDaysOfWeekItem - Day in a week, in three letters format
type PatchContentSchemaTimetableDaysOfWeekItem string

const (
	PatchContentSchemaTimetableDaysOfWeekItemFRI PatchContentSchemaTimetableDaysOfWeekItem = "FRI"
	PatchContentSchemaTimetableDaysOfWeekItemMON PatchContentSchemaTimetableDaysOfWeekItem = "MON"
	PatchContentSchemaTimetableDaysOfWeekItemSAT PatchContentSchemaTimetableDaysOfWeekItem = "SAT"
	PatchContentSchemaTimetableDaysOfWeekItemSUN PatchContentSchemaTimetableDaysOfWeekItem = "SUN"
	PatchContentSchemaTimetableDaysOfWeekItemTHU PatchContentSchemaTimetableDaysOfWeekItem = "THU"
	PatchContentSchemaTimetableDaysOfWeekItemTUE PatchContentSchemaTimetableDaysOfWeekItem = "TUE"
	PatchContentSchemaTimetableDaysOfWeekItemWED PatchContentSchemaTimetableDaysOfWeekItem = "WED"
)

// PossiblePatchContentSchemaTimetableDaysOfWeekItemValues returns the possible values for the PatchContentSchemaTimetableDaysOfWeekItem const type.
func PossiblePatchContentSchemaTimetableDaysOfWeekItemValues() []PatchContentSchemaTimetableDaysOfWeekItem {
	return []PatchContentSchemaTimetableDaysOfWeekItem{
		PatchContentSchemaTimetableDaysOfWeekItemFRI,
		PatchContentSchemaTimetableDaysOfWeekItemMON,
		PatchContentSchemaTimetableDaysOfWeekItemSAT,
		PatchContentSchemaTimetableDaysOfWeekItemSUN,
		PatchContentSchemaTimetableDaysOfWeekItemTHU,
		PatchContentSchemaTimetableDaysOfWeekItemTUE,
		PatchContentSchemaTimetableDaysOfWeekItemWED,
	}
}

// Post201ApplicationJSONPropertiesItemsItem - Day in a week, in three letters format
type Post201ApplicationJSONPropertiesItemsItem string

const (
	Post201ApplicationJSONPropertiesItemsItemFRI Post201ApplicationJSONPropertiesItemsItem = "FRI"
	Post201ApplicationJSONPropertiesItemsItemMON Post201ApplicationJSONPropertiesItemsItem = "MON"
	Post201ApplicationJSONPropertiesItemsItemSAT Post201ApplicationJSONPropertiesItemsItem = "SAT"
	Post201ApplicationJSONPropertiesItemsItemSUN Post201ApplicationJSONPropertiesItemsItem = "SUN"
	Post201ApplicationJSONPropertiesItemsItemTHU Post201ApplicationJSONPropertiesItemsItem = "THU"
	Post201ApplicationJSONPropertiesItemsItemTUE Post201ApplicationJSONPropertiesItemsItem = "TUE"
	Post201ApplicationJSONPropertiesItemsItemWED Post201ApplicationJSONPropertiesItemsItem = "WED"
)

// PossiblePost201ApplicationJSONPropertiesItemsItemValues returns the possible values for the Post201ApplicationJSONPropertiesItemsItem const type.
func PossiblePost201ApplicationJSONPropertiesItemsItemValues() []Post201ApplicationJSONPropertiesItemsItem {
	return []Post201ApplicationJSONPropertiesItemsItem{
		Post201ApplicationJSONPropertiesItemsItemFRI,
		Post201ApplicationJSONPropertiesItemsItemMON,
		Post201ApplicationJSONPropertiesItemsItemSAT,
		Post201ApplicationJSONPropertiesItemsItemSUN,
		Post201ApplicationJSONPropertiesItemsItemTHU,
		Post201ApplicationJSONPropertiesItemsItemTUE,
		Post201ApplicationJSONPropertiesItemsItemWED,
	}
}

// PostContentSchemaAttributionActor - The attribution-actor of the scheduled pipeline.
type PostContentSchemaAttributionActor string

const (
	PostContentSchemaAttributionActorCurrent PostContentSchemaAttributionActor = "current"
	PostContentSchemaAttributionActorSystem  PostContentSchemaAttributionActor = "system"
)

// PossiblePostContentSchemaAttributionActorValues returns the possible values for the PostContentSchemaAttributionActor const type.
func PossiblePostContentSchemaAttributionActorValues() []PostContentSchemaAttributionActor {
	return []PostContentSchemaAttributionActor{
		PostContentSchemaAttributionActorCurrent,
		PostContentSchemaAttributionActorSystem,
	}
}

// PostContentSchemaOwner0Type - The type of the owner. Defaults to "organization". Accounts are only used as context owners
// in server.
type PostContentSchemaOwner0Type string

const (
	PostContentSchemaOwner0TypeAccount      PostContentSchemaOwner0Type = "account"
	PostContentSchemaOwner0TypeOrganization PostContentSchemaOwner0Type = "organization"
)

// PossiblePostContentSchemaOwner0TypeValues returns the possible values for the PostContentSchemaOwner0Type const type.
func PossiblePostContentSchemaOwner0TypeValues() []PostContentSchemaOwner0Type {
	return []PostContentSchemaOwner0Type{
		PostContentSchemaOwner0TypeAccount,
		PostContentSchemaOwner0TypeOrganization,
	}
}

// PostContentSchemaOwner1Type - The type of owner. Defaults to "organization". Accounts are only used as context owners in
// server and must be specified by an id instead of a slug.
type PostContentSchemaOwner1Type string

const (
	PostContentSchemaOwner1TypeOrganization PostContentSchemaOwner1Type = "organization"
)

// PossiblePostContentSchemaOwner1TypeValues returns the possible values for the PostContentSchemaOwner1Type const type.
func PossiblePostContentSchemaOwner1TypeValues() []PostContentSchemaOwner1Type {
	return []PostContentSchemaOwner1Type{
		PostContentSchemaOwner1TypeOrganization,
	}
}

// PostContentSchemaTimetableDaysOfWeekItem - Day in a week, in three letters format
type PostContentSchemaTimetableDaysOfWeekItem string

const (
	PostContentSchemaTimetableDaysOfWeekItemFRI PostContentSchemaTimetableDaysOfWeekItem = "FRI"
	PostContentSchemaTimetableDaysOfWeekItemMON PostContentSchemaTimetableDaysOfWeekItem = "MON"
	PostContentSchemaTimetableDaysOfWeekItemSAT PostContentSchemaTimetableDaysOfWeekItem = "SAT"
	PostContentSchemaTimetableDaysOfWeekItemSUN PostContentSchemaTimetableDaysOfWeekItem = "SUN"
	PostContentSchemaTimetableDaysOfWeekItemTHU PostContentSchemaTimetableDaysOfWeekItem = "THU"
	PostContentSchemaTimetableDaysOfWeekItemTUE PostContentSchemaTimetableDaysOfWeekItem = "TUE"
	PostContentSchemaTimetableDaysOfWeekItemWED PostContentSchemaTimetableDaysOfWeekItem = "WED"
)

// PossiblePostContentSchemaTimetableDaysOfWeekItemValues returns the possible values for the PostContentSchemaTimetableDaysOfWeekItem const type.
func PossiblePostContentSchemaTimetableDaysOfWeekItemValues() []PostContentSchemaTimetableDaysOfWeekItem {
	return []PostContentSchemaTimetableDaysOfWeekItem{
		PostContentSchemaTimetableDaysOfWeekItemFRI,
		PostContentSchemaTimetableDaysOfWeekItemMON,
		PostContentSchemaTimetableDaysOfWeekItemSAT,
		PostContentSchemaTimetableDaysOfWeekItemSUN,
		PostContentSchemaTimetableDaysOfWeekItemTHU,
		PostContentSchemaTimetableDaysOfWeekItemTUE,
		PostContentSchemaTimetableDaysOfWeekItemWED,
	}
}

// PostContentSchemaType - The type of checkout key to create. This may be either deploy-key or user-key.
type PostContentSchemaType string

const (
	PostContentSchemaTypeDeployKey PostContentSchemaType = "deploy-key"
	PostContentSchemaTypeUserKey   PostContentSchemaType = "user-key"
)

// PossiblePostContentSchemaTypeValues returns the possible values for the PostContentSchemaType const type.
func PossiblePostContentSchemaTypeValues() []PostContentSchemaType {
	return []PostContentSchemaType{
		PostContentSchemaTypeDeployKey,
		PostContentSchemaTypeUserKey,
	}
}
