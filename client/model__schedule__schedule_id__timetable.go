/*
CircleCI API

This describes the resources that make up the CircleCI API v2.

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// ScheduleScheduleIdTimetable Timetable that specifies when a schedule triggers.
type ScheduleScheduleIdTimetable struct {
	// Number of times a schedule triggers per hour, value must be between 1 and 60
	PerHour *int32 `json:"per-hour,omitempty"`
	// Hours in a day in which the schedule triggers.
	HoursOfDay []int32 `json:"hours-of-day,omitempty"`
	// Days in a week in which the schedule triggers.
	DaysOfWeek []string `json:"days-of-week,omitempty"`
}

// NewScheduleScheduleIdTimetable instantiates a new ScheduleScheduleIdTimetable object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewScheduleScheduleIdTimetable() *ScheduleScheduleIdTimetable {
	this := ScheduleScheduleIdTimetable{}
	return &this
}

// NewScheduleScheduleIdTimetableWithDefaults instantiates a new ScheduleScheduleIdTimetable object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewScheduleScheduleIdTimetableWithDefaults() *ScheduleScheduleIdTimetable {
	this := ScheduleScheduleIdTimetable{}
	return &this
}

// GetPerHour returns the PerHour field value if set, zero value otherwise.
func (o *ScheduleScheduleIdTimetable) GetPerHour() int32 {
	if o == nil || o.PerHour == nil {
		var ret int32
		return ret
	}
	return *o.PerHour
}

// GetPerHourOk returns a tuple with the PerHour field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScheduleScheduleIdTimetable) GetPerHourOk() (*int32, bool) {
	if o == nil || o.PerHour == nil {
		return nil, false
	}
	return o.PerHour, true
}

// HasPerHour returns a boolean if a field has been set.
func (o *ScheduleScheduleIdTimetable) HasPerHour() bool {
	if o != nil && o.PerHour != nil {
		return true
	}

	return false
}

// SetPerHour gets a reference to the given int32 and assigns it to the PerHour field.
func (o *ScheduleScheduleIdTimetable) SetPerHour(v int32) {
	o.PerHour = &v
}

// GetHoursOfDay returns the HoursOfDay field value if set, zero value otherwise.
func (o *ScheduleScheduleIdTimetable) GetHoursOfDay() []int32 {
	if o == nil || o.HoursOfDay == nil {
		var ret []int32
		return ret
	}
	return o.HoursOfDay
}

// GetHoursOfDayOk returns a tuple with the HoursOfDay field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScheduleScheduleIdTimetable) GetHoursOfDayOk() ([]int32, bool) {
	if o == nil || o.HoursOfDay == nil {
		return nil, false
	}
	return o.HoursOfDay, true
}

// HasHoursOfDay returns a boolean if a field has been set.
func (o *ScheduleScheduleIdTimetable) HasHoursOfDay() bool {
	if o != nil && o.HoursOfDay != nil {
		return true
	}

	return false
}

// SetHoursOfDay gets a reference to the given []int32 and assigns it to the HoursOfDay field.
func (o *ScheduleScheduleIdTimetable) SetHoursOfDay(v []int32) {
	o.HoursOfDay = v
}

// GetDaysOfWeek returns the DaysOfWeek field value if set, zero value otherwise.
func (o *ScheduleScheduleIdTimetable) GetDaysOfWeek() []string {
	if o == nil || o.DaysOfWeek == nil {
		var ret []string
		return ret
	}
	return o.DaysOfWeek
}

// GetDaysOfWeekOk returns a tuple with the DaysOfWeek field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScheduleScheduleIdTimetable) GetDaysOfWeekOk() ([]string, bool) {
	if o == nil || o.DaysOfWeek == nil {
		return nil, false
	}
	return o.DaysOfWeek, true
}

// HasDaysOfWeek returns a boolean if a field has been set.
func (o *ScheduleScheduleIdTimetable) HasDaysOfWeek() bool {
	if o != nil && o.DaysOfWeek != nil {
		return true
	}

	return false
}

// SetDaysOfWeek gets a reference to the given []string and assigns it to the DaysOfWeek field.
func (o *ScheduleScheduleIdTimetable) SetDaysOfWeek(v []string) {
	o.DaysOfWeek = v
}

func (o ScheduleScheduleIdTimetable) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.PerHour != nil {
		toSerialize["per-hour"] = o.PerHour
	}
	if o.HoursOfDay != nil {
		toSerialize["hours-of-day"] = o.HoursOfDay
	}
	if o.DaysOfWeek != nil {
		toSerialize["days-of-week"] = o.DaysOfWeek
	}
	return json.Marshal(toSerialize)
}

type NullableScheduleScheduleIdTimetable struct {
	value *ScheduleScheduleIdTimetable
	isSet bool
}

func (v NullableScheduleScheduleIdTimetable) Get() *ScheduleScheduleIdTimetable {
	return v.value
}

func (v *NullableScheduleScheduleIdTimetable) Set(val *ScheduleScheduleIdTimetable) {
	v.value = val
	v.isSet = true
}

func (v NullableScheduleScheduleIdTimetable) IsSet() bool {
	return v.isSet
}

func (v *NullableScheduleScheduleIdTimetable) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableScheduleScheduleIdTimetable(val *ScheduleScheduleIdTimetable) *NullableScheduleScheduleIdTimetable {
	return &NullableScheduleScheduleIdTimetable{value: val, isSet: true}
}

func (v NullableScheduleScheduleIdTimetable) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableScheduleScheduleIdTimetable) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
